# Generated by Django 5.2.5 on 2025-08-13 14:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('titres', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Demande',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entreprise', models.CharField(help_text="Nom de l'entreprise demandeuse", max_length=255)),
                ('email_contact', models.EmailField(help_text='Email de contact pour la demande', max_length=254)),
                ('telephone', models.CharField(blank=True, help_text='Numéro de téléphone', max_length=20, null=True)),
                ('adresse', models.TextField(blank=True, help_text='Adresse complète', null=True)),
                ('type_titre', models.CharField(choices=[('licence_type_1', 'Licence de type 1'), ('licence_type_2', 'Licence de type 2'), ('agrement_vendeurs', 'Agrément vendeurs'), ('agrement_installateurs', 'Agrément installateurs'), ('concessions', 'Concessions'), ('recepisse', 'Récépissé')], max_length=50)),
                ('description', models.TextField(blank=True, help_text='Description de la demande', null=True)),
                ('motivations', models.TextField(blank=True, help_text='Motivations de la demande', null=True)),
                ('status', models.CharField(choices=[('soumise', 'Soumise'), ('en_examen', 'En examen'), ('approuvee', 'Approuvée'), ('rejetee', 'Rejetée')], default='soumise', max_length=20)),
                ('numero_dossier', models.CharField(blank=True, help_text='Numéro unique du dossier', max_length=100, null=True, unique=True)),
                ('date_soumission', models.DateField(auto_now_add=True)),
                ('date_traitement', models.DateField(blank=True, help_text='Date de traitement final', null=True)),
                ('commentaires_admin', models.TextField(blank=True, help_text='Commentaires du personnel administratif', null=True)),
                ('documents_urls', models.JSONField(default=list, help_text='URLs des documents associés')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, help_text='Personnel assigné au traitement', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_assignees', to=settings.AUTH_USER_MODEL)),
                ('demandeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Demande',
                'verbose_name_plural': 'Demandes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentaireDemande',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_commentaire', models.CharField(choices=[('public', 'Public'), ('interne', 'Interne'), ('systeme', 'Système')], default='public', max_length=20)),
                ('contenu', models.TextField(help_text='Contenu du commentaire')),
                ('est_resolu', models.BooleanField(default=False, help_text='Commentaire résolu ou non')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaires', to='demandes.demande')),
            ],
            options={
                'verbose_name': 'Commentaire Demande',
                'verbose_name_plural': 'Commentaires Demandes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_fichier', models.CharField(help_text='Nom original du fichier', max_length=255)),
                ('type_document', models.CharField(choices=[('justificatif_entreprise', "Justificatif d'entreprise"), ('plan_affaires', "Plan d'affaires"), ('etude_technique', 'Étude technique'), ('garantie_financiere', 'Garantie financière'), ('autorisation_prealable', 'Autorisation préalable'), ('certificat_conformite', 'Certificat de conformité'), ('autre', 'Autre document')], max_length=50)),
                ('fichier', models.FileField(help_text='Fichier à télécharger', upload_to='documents/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'zip', 'rar'])])),
                ('taille_fichier', models.PositiveIntegerField(help_text='Taille du fichier en bytes')),
                ('hash_fichier', models.CharField(help_text='Hash SHA-256 du fichier', max_length=64)),
                ('description', models.TextField(blank=True, help_text='Description du document', null=True)),
                ('version', models.PositiveIntegerField(default=1, help_text='Version du document')),
                ('est_actif', models.BooleanField(default=True, help_text='Document actif ou archivé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('demande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='demandes.demande')),
                ('titre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='titres.titre')),
                ('uploade_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueDemande',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('soumission', 'Soumission'), ('assignation', 'Assignation'), ('mise_en_examen', 'Mise en examen'), ('commentaire', 'Commentaire ajouté'), ('document_ajoute', 'Document ajouté'), ('document_supprime', 'Document supprimé'), ('approbation', 'Approbation'), ('rejet', 'Rejet'), ('modification', 'Modification')], max_length=20)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('ancien_status', models.CharField(blank=True, max_length=20, null=True)),
                ('nouveau_status', models.CharField(blank=True, max_length=20, null=True)),
                ('date_action', models.DateTimeField(auto_now_add=True)),
                ('donnees_modifiees', models.JSONField(default=dict, help_text='Données qui ont été modifiées')),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='demandes.demande')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historique Demande',
                'verbose_name_plural': 'Historiques Demandes',
                'ordering': ['-date_action'],
            },
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['numero_dossier'], name='demandes_de_numero__d2a67c_idx'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['status'], name='demandes_de_status_ebc565_idx'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['type_titre'], name='demandes_de_type_ti_9a8a4d_idx'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['demandeur'], name='demandes_de_demande_716574_idx'),
        ),
        migrations.AddIndex(
            model_name='demande',
            index=models.Index(fields=['date_soumission'], name='demandes_de_date_so_fcff64_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['demande', 'type_document'], name='demandes_do_demande_eae397_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['titre', 'type_document'], name='demandes_do_titre_i_cd592f_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['hash_fichier'], name='demandes_do_hash_fi_1723ba_idx'),
        ),
    ]
