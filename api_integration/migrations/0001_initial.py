# Generated by Django 5.2.5 on 2025-08-14 09:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la clé')),
                ('key', models.CharField(max_length=64, unique=True, verbose_name='Clé API')),
                ('secret', models.CharField(max_length=128, verbose_name='Secret')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('allowed_ips', models.TextField(blank=True, verbose_name='IPs autorisées (une par ligne)')),
                ('allowed_endpoints', models.JSONField(default=list, verbose_name='Endpoints autorisés')),
                ('rate_limit', models.IntegerField(default=1000, verbose_name='Limite de requêtes/heure')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('expired', 'Expirée'), ('revoked', 'Révoquée')], default='active', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clé API',
                'verbose_name_plural': 'Clés API',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom du service')),
                ('service_type', models.CharField(choices=[('sms', 'Service SMS'), ('email', 'Service Email'), ('payment', 'Service de Paiement'), ('document', 'Service de Documents'), ('notification', 'Service de Notifications'), ('storage', 'Service de Stockage'), ('other', 'Autre')], max_length=20)),
                ('base_url', models.URLField(verbose_name='URL de base')),
                ('description', models.TextField(blank=True)),
                ('api_key', models.CharField(blank=True, max_length=200, verbose_name='Clé API')),
                ('api_secret', models.CharField(blank=True, max_length=200, verbose_name='Secret API')),
                ('config', models.JSONField(default=dict, verbose_name='Configuration additionnelle')),
                ('headers', models.JSONField(default=dict, verbose_name='Headers par défaut')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('maintenance', 'Maintenance'), ('error', 'Erreur')], default='active', max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('last_check', models.DateTimeField(blank=True, null=True)),
                ('response_time', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('uptime_percentage', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Externe',
                'verbose_name_plural': 'Services Externes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceHealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('up', 'Opérationnel'), ('down', 'Hors service'), ('degraded', 'Dégradé'), ('unknown', 'Inconnu')], max_length=10)),
                ('response_time', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_checks', to='api_integration.externalservice')),
            ],
            options={
                'verbose_name': 'Vérification de Santé',
                'verbose_name_plural': 'Vérifications de Santé',
                'ordering': ['-checked_at'],
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nom du webhook')),
                ('url', models.URLField(verbose_name='URL de destination')),
                ('description', models.TextField(blank=True)),
                ('events', models.JSONField(default=list, verbose_name='Événements surveillés')),
                ('secret', models.CharField(blank=True, max_length=64, verbose_name='Secret pour signature')),
                ('headers', models.JSONField(blank=True, default=dict, verbose_name='Headers personnalisés')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('failed', 'En échec')], default='active', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('success_count', models.IntegerField(default=0, verbose_name='Succès')),
                ('failure_count', models.IntegerField(default=0, verbose_name='Échecs')),
                ('last_success', models.DateTimeField(blank=True, null=True)),
                ('last_failure', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Webhook',
                'verbose_name_plural': 'Webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('success', 'Succès'), ('failed', 'Échec'), ('retry', 'Retry')], default='pending', max_length=10)),
                ('http_status', models.IntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('attempts', models.IntegerField(default=0)),
                ('max_attempts', models.IntegerField(default=3)),
                ('next_retry', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('webhook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='api_integration.webhook')),
            ],
            options={
                'verbose_name': 'Livraison Webhook',
                'verbose_name_plural': 'Livraisons Webhook',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], max_length=10)),
                ('endpoint', models.CharField(max_length=500)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('status_code', models.IntegerField()),
                ('response_time', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Temps de réponse (ms)')),
                ('response_size', models.BigIntegerField(blank=True, null=True, verbose_name='Taille de la réponse (bytes)')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('request_data', models.JSONField(blank=True, default=dict, verbose_name='Données de la requête')),
                ('error_message', models.TextField(blank=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='api_integration.apikey')),
            ],
            options={
                'verbose_name': 'Requête API',
                'verbose_name_plural': 'Requêtes API',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['api_key', '-timestamp'], name='api_integra_api_key_191a80_idx'), models.Index(fields=['status_code', '-timestamp'], name='api_integra_status__412992_idx'), models.Index(fields=['endpoint', '-timestamp'], name='api_integra_endpoin_7876be_idx')],
            },
        ),
    ]
